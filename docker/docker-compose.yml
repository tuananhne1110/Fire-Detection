version: '3'

services:
  ai-business-fire-service:
    container_name: fire-biz-sv
    image: qvision-ai-fire-business-service
    restart: always
    networks:
      - fire
    volumes:
      - ../services/ai-business-services:/app
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              capabilities: [gpu]
    command: python server.py

  ai-objects-fire-service:
    container_name: fire-obj-sv
    image: qvision-ai-fire-service
    build: ../services/ai-object-services
    restart: always
    networks:
      - fire
    volumes:
      - ../services/ai-object-services:/app
      - ../services/ai-object-services/assets/video:/app/assets/video
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              capabilities: [gpu]
    environment:
      - NVIDIA_VISIBLE_DEVICES=all
      - NVIDIA_DRIVER_CAPABILITIES=compute,utility
    command: python server.py

  ai-visualize-fire-service:
    container_name: fire-vs-sv
    image: qvision-ai-fire-visualize-service
    restart: always
    networks:
      - fire
    volumes:
      - ../services/ai-visuzalize-services:/app
    ports:
      - "6969:6969"
    command: gunicorn -w 4 -b 0.0.0.0:6969 wsgi:app

  ai-fire-tranship-service:
    container_name: ai-fire-tranship-service
    image: redis
    restart: always
    ports:
      - "63796:6379"
    networks:
      - fire

  prometheus:
    container_name: fire-prometheus
    image: prom/prometheus:v2.45.0
    restart: always
    ports:
      - "9090:9090"
    networks:
      - fire
    volumes:
      - ../monitoring/prometheus:/etc/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'

  alertmanager:
    container_name: fire-alertmanager
    image: prom/alertmanager:v0.25.0
    restart: always
    ports:
      - "9093:9093"
    networks:
      - fire
    volumes:
      - ../monitoring/alertmanager:/etc/alertmanager
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
      - '--storage.path=/alertmanager'

  grafana:
    container_name: fire-grafana
    image: grafana/grafana:10.0.0
    restart: always
    ports:
      - "3000:3000"
    networks:
      - fire
    volumes:
      - grafana_data:/var/lib/grafana
      - ../monitoring/grafana/provisioning:/etc/grafana/provisioning
      - ../monitoring/grafana/dashboards:/etc/grafana/dashboards
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_INSTALL_PLUGINS=grafana-piechart-panel,grafana-worldmap-panel
    depends_on:
      - prometheus

networks:
  fire:
    name: fire
    external: true

volumes:
  grafana_data: 